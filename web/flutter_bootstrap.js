{{flutter_js}}
{{flutter_build_config}}

// ÂàõÂª∫ÁÅ´ÁÆ≠È£ûÂêëÁ©∫Èó¥Á´ôÁöÑÂä†ËΩΩÈ°µÈù¢
function createRocketLoadingScreen() {
  const style = document.createElement('style');
  style.textContent = `
    .rocket-loading {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: #000000;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      z-index: 9999;
      font-family: Arial, sans-serif;
      overflow: hidden;
    }

    .progress-background-text {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 20vw;
      font-weight: 900;
      color: rgba(255, 255, 255, 0.03);
      pointer-events: none;
      user-select: none;
      z-index: 1;
      font-family: 'Arial Black', Arial, sans-serif;
      letter-spacing: -0.05em;
    }

    .progress-corner {
      position: absolute;
      top: 30px;
      left: 30px;
      z-index: 10;
      color: #ffffff;
      font-family: 'Arial Black', Arial, sans-serif;
    }

    .progress-corner-percent {
      font-size: 8rem;
      font-weight: 900;
      line-height: 0.9;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
      margin-bottom: 5px;
    }

    .progress-corner-label {
      font-size: 2rem;
      font-weight: bold;
      opacity: 0.8;
      text-transform: uppercase;
      letter-spacing: 2px;
    }

    .mission-title {
      color: #fff;
      font-size: 2rem;
      text-align: left;
      font-weight: bold;
    }

    .rocket-container {
      position: relative;
      width: 95%;
      max-width: none;
      height: 100px;
      margin: 30px 0;
    }

    .rocket-track {
      position: absolute;
      top: 50%;
      left: 0;
      right: 0;
      height: 12px;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 6px;
      transform: translateY(-50%);
      overflow: hidden;
      border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .rocket-progress-fill {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 0%;
      background: #ffffff;
      border-radius: 6px;
      transition: width 0.5s ease;
      box-shadow: 
        0 0 15px rgba(255, 255, 255, 0.3),
        inset 0 1px 0 rgba(255, 255, 255, 0.4),
        inset 0 -1px 0 rgba(255, 255, 255, 0.2);
      animation: progressGlow 2s ease-in-out infinite alternate;
    }

    @keyframes progressGlow {
      0% { 
        box-shadow: 
          0 0 15px rgba(255, 255, 255, 0.3),
          inset 0 1px 0 rgba(255, 255, 255, 0.4),
          inset 0 -1px 0 rgba(255, 255, 255, 0.2);
      }
      100% { 
        box-shadow: 
          0 0 25px rgba(255, 255, 255, 0.5),
          inset 0 1px 0 rgba(255, 255, 255, 0.6),
          inset 0 -1px 0 rgba(255, 255, 255, 0.4);
      }
    }

    .rocket {
      position: absolute;
      top: 50%;
      left: 0;
      width: 80px;
      height: 50px;
      transform: translateY(-50%);
      transition: left 0.5s ease;
    }

    .rocket-body {
          width: 50px;
    height: 25px;
    background: #fff;
    border-top-left-radius: 20px;
    border-top-right-radius: 100px;
    border-bottom-left-radius: 20px;
    border-bottom-right-radius: 100px;
    position: relative;
    box-shadow: 0 0 15px rgba(255, 107, 107, 0.6);
    border: 2px solid #ff4757;
}
    }

    .rocket-nose {
      position: absolute;
      right: -8px;
      top: 50%;
      transform: translateY(-50%);
      width: 16px;
      height: 16px;
      background: #ff4757;
      border-radius: 50%;
      box-shadow: 0 0 8px rgba(255, 71, 87, 0.8);
    }

    .rocket-tail {
      position: absolute;
      left: -10px;
      top: 50%;
      transform: translateY(-50%);
      width: 16px;
      height: 16px;
      background: #ff4757;
      border-radius: 50%;
    }

    .rocket-window {
      position: absolute;
      right: 12px;
      top: 50%;
      transform: translateY(-50%);
      width: 8px;
      height: 8px;
      background: rgba(135, 206, 250, 0.9);
      border-radius: 50%;
      border: 1px solid #4a90e2;
    }

    .rocket-flame {
    position: absolute;
    left: -30px;
    top: 12px;
    width: 25px;
    height: 10px;
    background: linear-gradient(90deg, #ff9f9f, #f3ca68);
    border-radius: 50% 0 0 50%;
    animation: flame 0.2s infinite alternate;
    }

    @keyframes flame {
      0% { transform: translateY(-50%) scaleX(1); }
      100% { transform: translateY(-50%) scaleX(0.7); }
    }

    .progress-info {
      color: #fff;
      text-align: center;
      margin-top: 30px;
      z-index: 5;
      position: relative;
    }

    .progress-percent {
      font-size: 28px;
      font-weight: bold;
      margin-bottom: 10px;
    }

    .progress-status {
      font-size: 18px;
      opacity: 0.9;
    }

    .fade-out {
      animation: fadeOut 0.6s ease-out forwards;
    }

    @keyframes fadeOut {
      to { opacity: 0; visibility: hidden; }
    }

    /* ÂìçÂ∫îÂºèËÆæËÆ° */
    @media (max-width: 768px) {
      .progress-corner {
        top: 20px;
        left: 20px;
        right: 20px;
        width: auto;
      }
      
      .progress-corner-percent {
        font-size: 4rem;
      }
      
      .progress-corner-label {
        font-size: 1.2rem;
      }
      
      .mission-title {
        font-size: 1.5rem;
      }
      
      .progress-background-text {
        font-size: 25vw;
      }
      
      .rocket-container {
        width: 90%;
        margin: 20px 0;
      }
    }

    @media (max-width: 480px) {
      .progress-corner {
        top: 15px;
        left: 15px;
        right: 15px;
        padding: 10px 15px;
      }
      
      .progress-corner-percent {
        font-size: 3rem;
      }
      
      .progress-corner-label {
        font-size: 1rem;
        letter-spacing: 1px;
      }
      
      .mission-title {
        font-size: 1.2rem;
      }
      
      .progress-background-text {
        font-size: 30vw;
      }
      
      .rocket-container {
        width: 85%;
        height: 80px;
        margin: 15px 0;
      }
      
      .rocket {
        width: 60px;
        height: 40px;
      }
      
      .rocket-body {
        width: 40px;
        height: 20px;
      }
    }
  `;
  
  document.head.appendChild(style);

  const container = document.createElement('div');
  container.className = 'rocket-loading';
  container.innerHTML = `
    <div class="progress-background-text">0%</div>
    
    <div class="progress-corner">
      <div class="progress-corner-percent">0%</div>
      <div class="progress-corner-label">ÂáÜÂ§áÂèëÂ∞Ñ</div>
      <div class="mission-title">Ê≠£Âú®ÂâçÂæÄCCÁ±≥È•≠ÁöÑÁ©∫Èó¥Á´ô</div>
    </div>
    
    
    
    <div class="rocket-container">
      <div class="rocket-track">
        <div class="rocket-progress-fill"></div>
      </div>
      <div class="rocket">
        <div class="rocket-body">
        <div class="rocket-flame"></div>
          <div class="rocket-nose"></div>
          <div class="rocket-tail"></div>
          <div class="rocket-window"></div>
          
        </div>
      </div>
    </div>
  `;

  document.body.appendChild(container);
  return container;
}

// Êõ¥Êñ∞ÁÅ´ÁÆ≠ËøõÂ∫¶ - ‰øÆÊîπ‰∏∫Â∞æÈÉ®ÂØπÈΩêËøõÂ∫¶Êù°
function updateRocketProgress(progress, status) {
  const rocket = document.querySelector('.rocket');
  const percent = document.querySelector('.progress-corner-percent');
  const statusText = document.querySelector('.progress-corner-label');
  const progressFill = document.querySelector('.rocket-progress-fill');
  const cornerPercent = document.querySelector('.progress-corner-percent');
  const backgroundText = document.querySelector('.progress-background-text');
  
  if (rocket && percent && statusText && progressFill) {
    const container = document.querySelector('.rocket-container');
    const trackWidth = container.offsetWidth;
    const rocketWidth = 120;
    
    // ÁÆÄÂåñÁÅ´ÁÆ≠‰ΩçÁΩÆËÆ°ÁÆóÔºåËÆ©ÁÅ´ÁÆ≠Â∞æÈÉ®Ë∑üÈöèËøõÂ∫¶Êù°Êú´Á´Ø
    const rocketPosition = (progress * (trackWidth - rocketWidth) / 100+80);
    rocket.style.left = rocketPosition + 'px';
    
    // Êõ¥Êñ∞ËøõÂ∫¶Êù°Â°´ÂÖÖ - Â°´ÂÖÖÂà∞ÁÅ´ÁÆ≠Â∞æÈÉ®‰ΩçÁΩÆ
    const fillWidth = (progress * trackWidth / 100);
    progressFill.style.width = fillWidth + 'px';
    
    // Êõ¥Êñ∞ÊâÄÊúâÊñáÂ≠óÊòæÁ§∫
    const progressText = Math.round(progress) + '%';
    percent.textContent = progressText;
    statusText.textContent = status;
    
    // Êõ¥Êñ∞Â∑¶‰∏äËßíËøõÂ∫¶ÊòæÁ§∫
    if (cornerPercent) {
      cornerPercent.textContent = progressText;
    }
    
    // Êõ¥Êñ∞ËÉåÊôØË£ÖÈ•∞ÊñáÂ≠ó
    if (backgroundText) {
      backgroundText.textContent = progressText;
    }
  }
}

// ÁßªÈô§Âä†ËΩΩÈ°µÈù¢
function removeRocketLoading() {
  const loading = document.querySelector('.rocket-loading');
  if (loading) {
    loading.classList.add('fade-out');
    setTimeout(() => loading.remove(), 600);
  }
}

// ÂàõÂª∫Âä†ËΩΩÈ°µÈù¢
createRocketLoadingScreen();

// Âä†ËΩΩÁä∂ÊÄÅÂíåÂØπÂ∫îÁöÑÁä∂ÊÄÅÊñáÂ≠ó
const loadingSteps = [
  { progress: 0, status: 'ÂáÜÂ§áÂèëÂ∞Ñ...' },
  { progress: 20, status: 'ÁÇπÁÅ´ÂçáÁ©∫ üî•' },
  { progress: 45, status: 'ËÑ±Á¶ªÂ§ßÊ∞îÂ±Ç üåç' },
  { progress: 70, status: 'Êé•ËøëÁ©∫Èó¥Á´ô üõ∞Ô∏è' },
  { progress: 90, status: 'ÂáÜÂ§áÂØπÊé•...' },
  { progress: 100, status: 'Ê¨¢ËøéÊù•Âà∞Á©∫Èó¥Á´ô' }
];

let currentProgress = 0;
let targetProgress = 90; // ÂàùÂßãÁõÆÊ†áËøõÂ∫¶90%
let currentStepIndex = 0;

// Ëé∑ÂèñÂΩìÂâçËøõÂ∫¶ÂØπÂ∫îÁöÑÁä∂ÊÄÅÊñáÂ≠ó
function getCurrentStatus(progress) {
  for (let i = loadingSteps.length - 1; i >= 0; i--) {
    if (progress >= loadingSteps[i].progress) {
      return loadingSteps[i].status;
    }
  }
  return loadingSteps[0].status;
}

// Âπ≥ÊªëËøõÂ∫¶Êõ¥Êñ∞ - Êõ¥ÁúüÂÆûÁöÑÂä†ËΩΩÊõ≤Á∫ø
const progressTimer = setInterval(() => {
  if (currentProgress < 99) { // ÊúÄÂ§öÂ¢ûÈïøÂà∞99%
    let increment;
    
    if (currentProgress < 40) {
      // 0-40%ÔºöÊ≠£Â∏∏ÈÄüÂ∫¶
      increment = Math.random() * 1.2 + 0.6;
    } else if (currentProgress < 60) {
      // 40-60%ÔºöËæÉÊÖ¢ÈÄüÂ∫¶ÔºàÊ®°ÊãüÂ§çÊùÇËµÑÊ∫êÂä†ËΩΩÔºâ
      increment = Math.random() * 0.3 + 0.2;
    } else if (currentProgress < 85) {
      // 60-90%ÔºöÊÅ¢Â§çÊ≠£Â∏∏ÈÄüÂ∫¶
      increment = Math.random() * 1.0 + 0.5;
      // ÂΩìÊé•Ëøë90%Êó∂ÔºåÂ∞ÜÁõÆÊ†áËÆæ‰∏∫99%
      if (currentProgress >= 85) {
        targetProgress = 99;
      }
    } else {
      // 90-99%ÔºöÊûÅÊÖ¢ÈÄüÂ∫¶ÔºàÁ≠âÂæÖÊúÄÁªàÂàùÂßãÂåñÔºâ
      increment = Math.random() * 0.01 + 0.01;
    }
    
    currentProgress = Math.min(currentProgress + increment, 99);
    
    const status = getCurrentStatus(currentProgress);
    updateRocketProgress(currentProgress, status);
  }
}, 60);

_flutter.loader.load({
  onEntrypointLoaded: async function(engineInitializer) {
    clearInterval(progressTimer);
    
    // Â¶ÇÊûúÂΩìÂâçËøõÂ∫¶Â∞è‰∫é90%ÔºåÂàôËÆæ‰∏∫90%ÔºåÂê¶Âàô‰øùÊåÅÂΩìÂâçËøõÂ∫¶
    const finalProgress = Math.max(currentProgress, 90);
    updateRocketProgress(finalProgress, 'ÂáÜÂ§áÂØπÊé•...');

    const appRunner = await engineInitializer.initializeEngine();
    updateRocketProgress(100, 'Ê¨¢ËøéÊù•Âà∞Á©∫Èó¥Á´ô');
    
    await new Promise(resolve => setTimeout(resolve, 400));
    removeRocketLoading();
    
    await appRunner.runApp();
  }
});